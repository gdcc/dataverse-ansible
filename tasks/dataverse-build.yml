# datavarse/tasks/dataverse-build.yml

- name: build warfile
  debug:
    msg: '##### BUILD WARFILE #####'

- ansible.builtin.import_tasks: maven.yml

- name: get branch_commit
  shell: 'cd "{{ dataverse.srcdir }}" && git log --oneline | head -1 | awk "{print $1}"'
  register: bcout

- set_fact:
    commit='{{ bcout.stdout.split(" ")[0] }}'

- set_fact:
    jacoco_arg=''

- set_fact:
    jacoco_arg='-Djacoco.skip.instrument=false'
  when: dataverse.jacoco.enabled == true

- name: add branch name, branch_commit to BuildNumber.properties
  lineinfile:
    path: "{{ dataverse.srcdir }}/src/main/java/BuildNumber.properties"
    line: "build.number={{ dataverse_branch }}-{{ commit }}"
    create: yes

- name: build warfile without tests and default maven. tail /tmp/dataverse/mvn.out for gory details.
  shell: "export JAVA_HOME={{ java.home }} && mvn -T 2C clean package -Dmaven.test.skip=true > mvn.out"
  args:
    chdir: "{{ dataverse.srcdir }}"
  when: dataverse.unittests.enabled == false and
        maven.version == 'default'
  become: true
  become_user: '{{ dataverse.payara.user }}'

- name: build warfile without tests and custom maven. tail /home/dataverse/dataverse/mvn.out for gory details.
  shell: "source /etc/profile.d/maven.sh && mvn -T 2C clean package -Dmaven.test.skip=true > mvn.out"
  args:
    chdir: "{{ dataverse.srcdir }}"
  when: dataverse.unittests.enabled == false and
        maven.version != 'default'
  become: true
  become_user: '{{ dataverse.payara.user }}'

- name: build warfile with specified tests. tail /tmp/dataverse/mvn.out for gory details.
  shell: "mvn {{ dataverse.unittests.argument }} {{ jacoco_arg }} -T 2C clean package > mvn.out"
  args:
    chdir: "{{ dataverse.srcdir }}"
  when: dataverse.unittests.enabled == true and
        maven.version == 'default'
  become: true
  become_user: '{{ dataverse.payara.user }}'

- name: build warfile with specified tests using custom maven. tail /home/dataverse/dataverse/mvn.out for gory details.
  shell: "source /etc/profile.d/maven.sh && mvn {{ dataverse.unittests.argument }} {{ jacoco_arg }} -T 2C clean package > mvn.out"
  args:
    chdir: "{{ dataverse.srcdir }}"
  when: dataverse.unittests.enabled == true and
        maven.version != 'default'
  become: true
  become_user: '{{ dataverse.payara.user }}'

- name: copy warfile over release
  copy:
    src: '{{ dataverse.srcdir }}/target/dataverse-{{ dataverse.version }}.war'
    dest: '/tmp/dvinstall/dataverse.war'
    owner: root
    group: root
    mode: 0644
    remote_src: yes

- name: place redeploy script
  template:
    src: redeploy.sh.j2
    dest: '{{ dataverse.srcdir }}/redeploy.sh'
    owner: root
    group: root
    mode: 0755

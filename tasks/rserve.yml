---

- name: install rserve
  debug:
    msg: '##### BEGIN RSERVE INSTALLATION #####'

- name: ensure EPEL is installed
  yum:
    name: epel-release
    state: latest
  when: ansible_os_family == "RedHat"

- name: RHEL8/9 need codeready-builder
  rhsm_repository:
    name: codeready-builder-for-rhel-8-x86_64-rpms
  when: (ansible_distribution == "RedHat" and ansible_distribution_major_version == "8") or
        (ansible_distribution == "RedHat" and ansible_distribution_major_version == "9")

- name: Rocky 8 needs powertools
  shell: "dnf config-manager --enable powertools"
  when: ansible_distribution == "Rocky" and
        ansible_distribution_major_version == "8"

- name: Rocky 9 calls it crb
  shell: "dnf config-manager --enable crb"
  when: ansible_distribution == "Rocky" and
        ansible_distribution_major_version == "9"

- name: install base packages
  yum:
    name: "{{ packages }}"
  vars:
    packages:
      - R-core
      - R-core-devel
      - libcurl-devel
      - openssl-devel
  when: ansible_os_family == "RedHat"

- name: install base packages on Debian/Ubuntu
  package:
    name:
      - r-base-core
      - r-base-dev
      - libssl-dev
      - libcurl4-openssl-dev
  when:
    - ansible_os_family == "Debian"

- name: detect number of system cores
  set_fact:
    num_cores: '{{ ansible_processor_vcpus }}'

- name: ensure .R exists
  file:
    path: '~/.R'
    state: directory

- name: set in .R/Makevars
  lineinfile:
    path: '~/.R/Makevars'
    line: 'MAKEFLAGS = -j{{ num_cores }}'
    state: present
    create: yes

- name: detect installed R modules
  command: >
    /usr/bin/Rscript --slave --no-save --no-restore-history -e
    "if (! ('{{item}}' %in% installed.packages()[,'Package'])) print('{{item}}')"
  with_items:
    - R2HTML
    - rjson
    - DescTools
    - Rserve
    - haven
  register: not_installed_r_modules
  changed_when: false                ## this just for registering a variable, it does not change anyting by itself

- name: process module detection output
  set_fact:
    modules_to_install: "{{ not_installed_r_modules.results | map(attribute='stdout') | map('regex_replace','^.* .','')
                            | map('regex_replace','.$','') | select('match', '[a-zA-Z]+') | list }}"

- debug: msg='The following modules are not installed -- {{ modules_to_install }}'

# The second if-statement in this command makes this task fail,
# if the installtion of the R package fails.
# It follows the example given here https://stackoverflow.com/a/52638148/2862719
- name: install R modules
  command: >
    /usr/bin/Rscript --slave --no-save --no-restore-history -e
    "install.packages('{{ item }}', repos=c('https://cloud.r-project.org/'), Ncpus='{{ num_cores }}', quiet=TRUE);
    if(!library('{{ item }}', character.only=TRUE, logical.return=TRUE)){quit(status=1, save='no')};"
  with_items: "{{ modules_to_install }}"
  when: modules_to_install is defined

- name: create R user and group
  user:
    name: '{{ rserve.user }}'

- name: install Rserv.conf
  template:
    src: Rserv.conf.j2
    dest: /etc/Rserv.conf
    owner: root
    group: root
    mode: '0644'

- name: install Rserv.pwd
  template:
    src: Rserv.pwd.j2
    dest: /etc/Rserv.pwd
    owner: '{{ rserve.user }}'
    group: '{{ rserve.group }}'
    mode: '0600'

- name: install rserve.service systemd unit file
  template:
    src: rserve.service.j2
    dest: /usr/lib/systemd/system/rserve.service
    owner: root
    group: root
    mode: '0644'

- name: reload systemd, enable rserve, start
  systemd:
    name: rserve
    enabled: yes
    daemon_reload: yes
    state: started

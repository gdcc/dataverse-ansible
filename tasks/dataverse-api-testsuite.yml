---

- name: begin integration test task
  debug:
    msg: '##### RUN INTEGRATION TESTS #####'

- ansible.builtin.import_tasks: maven.yml

- ansible.builtin.import_tasks: postgresql_statements.yml
  when:
   - ansible_os_family == "RedHat"
   - db.postgres.log_statements != 'none'
   - not db.use_rds

- name: do we have a pom.xml
  stat:
    path: '{{ dataverse.srcdir }}/pom.xml'
  register: pom_xml

- name: if we're not in a branch, grab release source
  get_url:
    url: 'https://github.com/IQSS/dataverse/archive/v{{ dataverse.version }}.tar.gz'
    dest: '/tmp'
  when: pom_xml.stat.exists == false

- name: unarchive won't create directories for us
  file:
    path: '{{ dataverse.srcdir }}'
    state: directory
  when: pom_xml.stat.exists == false

- name: unpack, strip root directory
  shell: 'bsdtar --strip-components=1 -C {{ dataverse.srcdir }} -xf /tmp/dataverse-{{ dataverse.version }}.tar.gz'
  when: pom_xml.stat.exists == false

- name: ensure we have api script data directory
  shell: "/bin/cp -r {{ dataverse.srcdir }}/scripts/api/data /tmp/dvinstall/"

- name: set user management quesadilla
  uri:
    url: 'http://localhost:8080/api/admin/settings/BuiltinUsers.KEY'
    method: PUT
    body: '{{ dataverse.usermgmtkey }}'

- ansible.builtin.import_tasks: dataverse-apitoken.yml

- name: allow authenticated users to add to root
  uri:
    url: 'http://localhost:8080/api/dataverses/root/assignments?key={{ api_token }}'
    method: POST
    body: '{"assignee":":authenticated-users","role":"fullContributor"}'
    body_format: json

- name: is root dataverse already published
  stat:
     path: /tmp/dataverse/root_dv_published
  register: root_dv_published

- name: the root dataverse must be published
  uri:
    url: 'http://localhost:8080/api/dataverses/root/actions/:publish'
    method: POST
    headers:
      X-Dataverse-key: '{{ api_token }}'
  when: root_dv_published.stat.exists == False

- name: get authoritative list of ITs
  ansible.builtin.slurp:
    src: '{{ dataverse.srcdir }}/tests/integration-tests.txt'
  register: integration_test_list_b64
  when: dataverse.api.tests == 'default'

- name: base64decode integration_test_list_b64
  ansible.builtin.set_fact:
    integration_test_list: "{{ integration_test_list_b64['content'] | b64decode | trim }}"
  when: dataverse.api.tests == 'default'
  
- name: unless we have a user-specified list
  set_fact:
    integration_test_list: '{{ dataverse.api.tests }}'
  when: dataverse.api.tests != 'default'

- name: run test suite with default maven
  shell: 'mvn test -Dtest={{ integration_test_list }} -Ddataverse.test.baseurl=http://localhost:8080'
  args:
    chdir: '{{ dataverse.srcdir }}'
  environment:
    DVAPIKEY: '{{ dataverse.usermgmtkey }}'
    DV_APIKEY: '{{ dataverse.usermgmtkey }}'
    DV_API_KEY: '{{ dataverse.usermgmtkey }}'
  when: maven.version == 'default'
  become: true
  become_user: '{{ dataverse.payara.user }}'

- name: run test suite with custom maven
  shell: 'source /etc/profile.d/maven.sh && mvn test -Dtest={{ integration_test_list }} -Ddataverse.test.baseurl=http://localhost:8080'
  args:
    chdir: '{{ dataverse.srcdir }}'
  environment:
    DVAPIKEY: '{{ dataverse.usermgmtkey }}'
    DV_APIKEY: '{{ dataverse.usermgmtkey }}'
    DV_API_KEY: '{{ dataverse.usermgmtkey }}'
  when: maven.version != 'default'
  become: true
  become_user: '{{ dataverse.payara.user }}'

- name: generate HTML reports with default maven
  shell: 'mvn surefire-report:report'
  args:
    chdir: '{{ dataverse.srcdir }}'
  when: maven.version == 'default'
  become: true
  become_user: '{{ dataverse.payara.user }}'

- name: generate HTML reports with custom maven
  shell: 'source /etc/profile.d/maven.sh && mvn surefire-report:report'
  args:
    chdir: '{{ dataverse.srcdir }}'
  when: maven.version != 'default'
  become: true
  become_user: '{{ dataverse.payara.user }}'

- ansible.builtin.import_tasks: postgresql_perl_party.yml
  when:
   - ansible_os_family == "RedHat"
   - db.postgres.log_statements != 'none'
   - not db.use_rds

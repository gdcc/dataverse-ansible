---

- name: run sampledata
  debug:
    msg: '##### SAMPLEDATA #####'

# grab siteUrl so sampledata can run standalone
- ansible.builtin.import_tasks: dataverse-fqdn.yml

# grab apitoken so sampledata can run standalone
- ansible.builtin.import_tasks: dataverse-apitoken.yml

- name: "RHEL/Rocky 8.6 wants Python-3.8 these days."
  ansible.builtin.package:
    name: python38-pip
    state: latest
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version == "8"

- name: "RHEL/Rocky 9 packages Python-3.9"
  ansible.builtin.package:
    name: python3-pip
    state: latest
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version == "9"

- name: clone sampledata repo
  git:
    repo: '{{ dataverse.sampledata.repo }}'
    dest: '{{ dataverse.sampledata.dir }}'
    version: '{{ dataverse.sampledata.branch }}'

- name: create sampledata venv
  file:
    path: '{{ dataverse.sampledata.venv }}'
    state: directory
    mode: '0755'

- name: create venv
  shell: 'python3 -m venv {{ dataverse.sampledata.venv }}'

- name: source venv
  shell: 'source {{ dataverse.sampledata.venv }}/bin/activate'

- name: install dependencies
  shell: 'pip3 install -r requirements.txt'
  args: 
    chdir: '{{ dataverse.sampledata.dir }}'

- name: copy dvconfig.py.sample to dvconfig.py
  copy:
    src: '{{ dataverse.sampledata.dir }}/dvconfig.py.sample'
    dest: '{{ dataverse.sampledata.dir }}/dvconfig.py'
    remote_src: yes

- name: strip backslash from siteUrl
  set_fact:
    siteUrl_stripped: '{{ siteUrl | regex_replace ("\\", "") }}'

- name: set siteUrl in dvconfig.py
  replace:
    dest: '{{ dataverse.sampledata.dir }}/dvconfig.py'
    regexp: "^base_url = 'https://demo.dataverse.org'$"
    replace: "base_url = '{{ siteUrl_stripped }}'"

- name: set api token in dvconfig.py
  replace:
    dest: '{{ dataverse.sampledata.dir }}/dvconfig.py'
    regexp: "^api_token = ''$"
    replace: "api_token = '{{ api_token }}'"

- name: run sampledata
  shell: 'python3 create_sample_data.py'
  args:
    chdir: '{{ dataverse.sampledata.dir }}'

- name: sampledata publishes root dataverse
  file:
    path: '/tmp/dataverse'
    state: directory

- name: sampledata publishes root dataverse
  file:
    path: '/tmp/dataverse/root_dv_published'
    state: touch

- name: give dataverse a breather to avoid timeouts
  wait_for:
    timeout: 20

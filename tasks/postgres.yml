---
# dataverse/tasks/db.postgres.yml

- name: install postgres
  debug:
    msg: '##### POSTGRES #####'

- name: ansible postgres module wants python3-psycopg2
  package:
    name: python3-psycopg2
    state: latest

- name: postgres uses differing version syntax in a few commands/packages
  set_fact:
    dataverse_pg_version_short: "{{ db.postgres.version | regex_replace('\\.','') }}"

- ansible.builtin.import_tasks: postgres_debian.yml
  when: ansible_os_family == "Debian"

- ansible.builtin.import_tasks: postgres_redhat.yml
  when: ansible_os_family == "RedHat"

- ansible.builtin.import_tasks: postgres-init_redhat.yml
  when: ansible_os_family == "RedHat" and
        db.use_rds == false

- name: install pg_hba.conf
  template:
    src: pg_hba.conf.j2
    dest: '{{ postgres_config_dir }}/pg_hba.conf'
    owner: postgres
    group: postgres
    mode: 0644
  when: db.use_rds == false
  notify: enable and restart postgres

- ansible.builtin.import_tasks: postgres_replication.yml
  when: db.postgres.replication.enabled

- name: log_lock_waits when told
  lineinfile:
    path: '{{ postgres_config_dir }}/postgresql.conf'
    regexp: '^#log_lock_waits'
    line: 'log_lock_waits = on'
  when:
   - db.postgres.log_lock_waits
   - not db.use_rds
  notify: enable and restart postgres

- meta: flush_handlers

- name: dataverse python installer wants to be a postgres admin
  postgresql_user:
    name: postgres
    password: '{{ db.postgres.adminpass }}'
  when: db.use_rds == false

- name: create dataverse postgres database
  postgresql_db:
    name: '{{ db.postgres.name }}'
  when: db.use_rds == false

- name: create dataverse postgres user, set permissions
  postgresql_user:
    db: '{{ db.postgres.name }}'
    name: '{{ db.postgres.user }}'
    password: '{{ db.postgres.pass }}'
    role_attr_flags: 'NOSUPERUSER,CREATEDB,CREATEROLE,INHERIT,LOGIN'
  when: db.use_rds == false

- name: postgresql 15 requires explicit permissions on public schema
  community.postgresql.postgresql_privs:
    db: '{{ db.postgres.name }}'
    privs: CREATE
    type: schema
    objs: public
    role: '{{ db.postgres.user }}'

- ansible.builtin.import_tasks: postgres_sequential_identifiers.yml
  when: dataverse.api.test_suite == true

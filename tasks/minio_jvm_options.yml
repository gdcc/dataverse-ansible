---

- name: flush handlers to restart Payara if needed
  meta: flush_handlers

- name: escape custom endpoint url colons
  ansible.builtin.set_fact: "custom_endpoint_escaped={{ minio.docker.custom_endpoint_url | regex_replace (':','\\:') }}"

- name: build minio dict
  ansible.builtin.set_fact:
    minio_dict: "{{ minio_dict | default({}) | combine ({ item.key : item.value }) }}"
  with_items:
    - { 'key' : 'type' , 'value' : 's3' }
    - { 'key' : 'label' , 'value' : '{{ minio.docker.label }}' }
    - { 'key' : 'custom-endpoint-url' , 'value' : '{{ custom_endpoint_escaped }}' }
    - { 'key' : 'custom-endpoint-region' , 'value' : '{{ minio.docker.custom_endpoint_region }}' }
    - { 'key' : 'bucket-name' , 'value' : '{{ minio.docker.default_bucket }}' }
    - { 'key' : 'path-style-access' , 'value' : 'true' }
    - { 'key' : 'upload-redirect' , 'value' : 'false' }
    - { 'key' : 'download-redirect' , 'value' : 'false' }
    - { 'key' : 'access-key' , 'value' : '{{ minio.docker.access_key }}' }
    - { 'key' : 'secret-access-key' , 'value' : '{{ minio.docker.secret_key }}' }

- name: debug
  ansible.builtin.debug:
    msg: '{{ minio_dict }}'

- name: set Payara MinIO JVM-options
  become: yes
  become_user: '{{ dataverse.payara.user }}'
  ansible.builtin.shell: '{{ payara_dir }}/bin/asadmin create-jvm-options "\-Ddataverse.files.minio1.{{ item.key }}={{ item.value }}"'
  loop: "{{ lookup('dict', minio_dict) }}"
